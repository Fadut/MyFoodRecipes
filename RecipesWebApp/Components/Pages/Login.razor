@page "/login"
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using RecipesWebApp.Services
@inject SignInManager<IdentityUser> SignInManager
@inject NavigationManager Navigation
@inject AuthService AuthService

<h3 class="mt-4 mb-3 text-center">Login to your account</h3>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">

            <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group mb-3">
                    <label for="username">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                </div>

                <div class="form-group mb-3">
                    <label for="password">Password</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                </div>

                <button type="submit" class="btn btn-primary">Log in</button>
            </EditForm>


        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();

    private string? message;

    private async Task HandleLogin()
    {
        var success = await AuthService.LogInAsync(loginModel.Username, loginModel.Password);

        if (success)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            message = "Invalid username or password.";
        }
    }

    // TODO: Consider refactoring. Add a model class.
    class LoginModel
    {
        [Required]
        public string Username { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;
    }
}
