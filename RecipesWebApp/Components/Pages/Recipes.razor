@page "/recipes"
@using RecipesAPI.Models
@using RecipesWebApp.Services
@inject RecipeService RecipeService
@inject NavigationManager Navigation

<h3>Recipes (database)</h3>

@if (recipes is null)
{
    <p>Loading recipes...</p>
}
else
{
    <button class="btn btn-primary mb-3" @onclick="GoToCreate">Create new recipe</button>

    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Ingredients</th>
                <th>Preparation time</th>
                <th>Image</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var recipe in recipes)
            {
                <tr>
                    <td>
                        <a href="/recipe/@recipe.Id" style="text-decoration: none; color: inherit; display: flex; flex-direction: column; align-items: center;">
                            <img src="@recipe.ImageUrl" alt="@recipe.Title" width="100" style="cursor: pointer; border-radius: 8px;" />
                            <p style="margin: 5px 0 0; font-weight: bold; text-align: center;">@recipe.Title</p>
                        </a>
                    </td>
                    <td>@recipe.Description</td>
                    <td>
                        <ul>
                            @foreach (var ingredient in recipe.Ingredients)
                            {
                                <li>@ingredient</li>
                            }
                        </ul>
                    </td>
                    <td>@recipe.PreparationTime min</td>
                    <td>
                        <img src="@recipe.ImageUrl" width="100" />
                    </td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditRecipe(recipe.Id)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteRecipe(recipe.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Recipe>? recipes;

    protected override async Task OnInitializedAsync()
    {
        recipes = await RecipeService.GetRecipesAsync();
    }

    private void GoToCreate() => Navigation.NavigateTo("/create-recipe");

    private void EditRecipe(int id) => Navigation.NavigateTo($"/edit-recipe/{id}");

    private async Task DeleteRecipe(int id)
    {
        await RecipeService.DeleteRecipeAsync(id);
        recipes = await RecipeService.GetRecipesAsync();
    }
}
