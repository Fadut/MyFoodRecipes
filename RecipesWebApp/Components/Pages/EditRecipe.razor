@page "/edit-recipe/{id:int}"
@using RecipesAPI.Models
@using RecipesWebApp.Services
@inject RecipeService RecipeService
@inject NavigationManager Navigation

<h3>Edit recipe</h3>

@if (recipe == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <label>Title:</label>
        <input @bind="recipe.Title" class="form-control" />

        <label>Description:</label>
        <textarea @bind="recipe.Description" class="form-control"></textarea>

        <label>Ingredients:</label>
        <input @bind="newIngredient" placeholder="Add ingredient" />
        <button @onclick="AddIngredient">Add</button>

        <ul>
            @foreach (var ingredient in recipe.Ingredients)
            {
                <li>@ingredient <button @onclick="() => RemoveIngredient(ingredient)">❌</button></li>
            }
        </ul>

        <label>Instructions:</label>
        <textarea @bind="recipe.Instructions" class="form-control" placeholder="1. Whip the eggs..."></textarea>

        <label>Image URL:</label>
        <input @bind="recipe.ImageUrl" class="form-control" />

        <label>Category</label>
        <select @bind="recipe.Category" class="form-control mb-2">
            <option value="">Choose a category</option>
            <option>Breakfast</option>
            <option>Lunch</option>
            <option>Dinner</option>
            <option>Dessert</option>
        </select>

        <label>Cuisine type</label>
        <select @bind="recipe.CuisineType" class="form-control mb-2">
            <option value="">Vælg køkken</option>
            <option>Global</option>
            <option>Nordic</option>
            <option>Asian</option>
            <option>Italian</option>
            <option>Indian</option>
            <option>African</option>
            <option>Mexican</option>
            <option>Japanese</option>
            <option>Thai</option>
        </select>

        <button class="btn btn-success mt-3" @onclick="UpdateRecipe">Save changes</button>
    </div>
}

@code {
    [Parameter] public int id { get; set; }
    private Recipe? recipe;
    private string newIngredient = string.Empty;

    private void AddIngredient()
    {
        if (!string.IsNullOrWhiteSpace(newIngredient))
        {
            recipe.Ingredients.Add(newIngredient);
            newIngredient = string.Empty;
        }
    }

    private void RemoveIngredient(string ingredient)
    {
        recipe.Ingredients.Remove(ingredient);
    }

    protected override async Task OnInitializedAsync()
    {
        recipe = await RecipeService.GetRecipeByIdAsync(id);
    }

    private async Task UpdateRecipe()
    {
        if (recipe != null)
        {
            await RecipeService.UpdateRecipeAsync(id, recipe);
            Navigation.NavigateTo("/recipes");
        }
    }
}
