@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Server
@using Microsoft.AspNetCore.Identity
@using RecipesWebApp.Services
@inject SignInManager<IdentityUser> SignInManager
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider
@inject AuthService AuthService

<AuthorizeView>
    <Authorized>
        <div class="d-flex align-items-center gap-3">
            <span class="text-success">Hello, @context.User.Identity?.Name!</span>
            <button class="btn btn-outline-danger btn-sm" @onclick="LogoutAction">Logout</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <a href="/login" class="btn btn-outline-primary btn-sm">Login</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async void LogoutAction()
    {
        await AuthService.LogOutAsync();
        Navigation.NavigateTo("/", forceLoad: true);
    }

    // private string? username;
    // protected override async Task OnInitializedAsync()
    // {
    //     var authState = await AuthProvider.GetAuthenticationStateAsync();
    //     var user = authState.User;

    //     if (user.Identity?.IsAuthenticated == true)
    //     {
    //         username = user.Identity.Name;
    //     }
    // }
}
